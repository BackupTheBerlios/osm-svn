
<!-- 
PKI Framework.
Copyright 2001-2002 OSM SARL, All Rights Reserved.
-->

<project name="sps" default="help" basedir=".">

  <property file="local.properties"/>
  <property file="build.properties"/>

  <target name="help" >
    <echo>

      Description
      -----------

      ${project.title}

      General Targets:
      ----------------

      all              - clean, build and dist
      build            - invokes the general build target
      javadoc          - javadoc API generation
      dist             - executes build, javadoc and support file creation
      clean            - destroy the build directory
      
    </echo>
  </target>

  <property name="VERSION" value="${MAJOR}.${MINOR}.${MICRO}"/>

  <property name="apps.path" value="../../jakarta-avalon-apps" />
  <property name="enterprise" value="${apps.path}/enterprise" />
  <property name="common.path" value="${apps.path}/common" />
  <property name="common.lib.path" value="${common.path}/lib" />
  <property name="orb.lib.path" value="${enterprise}/orb/lib" />
  <property name="orb.dist.path" value="${enterprise}/orb/dist" />
  <property name="idl.class"  value="org.openorb.compiler.IdlCompiler" />
  <property name="pss.dist.path" value="${enterprise}/pss/dist" />
  <property name="time.dist.path" value="${enterprise}/time/dist" />

  <property name="project.jar" value="${ant.project.name}.jar"/>

  <property name="lib" value="lib" />
  <property name="src" value="src" />
  <property name="etc" value="${src}/etc" />
  <property name="idl" value="${src}/idl" />
  <property name="psdl" value="${src}/psdl" />
  <property name="build"  value="build" />
  <property name="dist"  value="dist" />

  <property name="pss.engine.jar"  value="pss-2.0.1.jar" />
  <property name="psdl.jar"  value="psdl-2.0.1.jar" />
  <property name="psdl.class"  value="org.apache.pss.compiler.PsdlCompiler" />
  <property name="persistence" value="file" />
  <property name="net.osm.pss.connector" value="${persistence}" />

  <property name="javadoc.root.path"  value="${dist}/javadoc" />
  <property name="avalon.href"  value="http://jakarta.apache.org/avalon/api/" />
  <property name="jdk.href"  value="http://java.sun.com/j2se/1.4/docs/api/" />
  <property name="overview.html" value="${etc}/overview.html" />

  <!-- classpath -->

  <path id="project.classpath">
      <fileset dir="${common.lib.path}">
        <include name="*.jar" />
      </fileset>
      <fileset dir="${orb.dist.path}">
        <include name="*.jar" />
      </fileset>
      <fileset dir="${orb.lib.path}">
        <include name="*.jar" />
      </fileset>
      <fileset dir="${pss.dist.path}">
        <include name="*.jar" />
      </fileset>
      <fileset dir="${time.dist.path}">
        <include name="*.jar" />
      </fileset>
  </path>

  <!-- MAIN TARGETS -->

  <target name="all" depends="clean,dist"/>
  <target name="dist" depends="build,javadoc,support"/>
  <target name="build" depends="psdl,compile"/>

  <target name="clean">
     <delete dir="${build}"/>
     <delete dir="${dist}"/>
  </target>

  <!-- PREPARE -->

  <target name="prepare"  >
    <mkdir dir="${dist}" />
    <mkdir dir="${build}/CosEvent/src" />
    <mkdir dir="${build}/Notification/src" />
    <mkdir dir="${build}/NotifyComm/src" />
    <mkdir dir="${build}/proxy/src" />
    <mkdir dir="${build}/event/src" />
    <mkdir dir="${build}/sps/src" />
    <mkdir dir="${build}/lib" />
  </target>

  <!-- CONTEXT -->

  <target name="context" depends="prepare">
    <uptodate property="project.uptodate" targetfile="${dist}/${project.jar}">
      <srcfiles dir="${src}/java">
         <include name="**/*.*"/>
      </srcfiles>
      <srcfiles dir="${etc}">
         <include name="${ant.project.name}.mf"/>
      </srcfiles>
      <srcfiles dir="${build}/CosEvent/src">
         <include name="**/*.*"/>
      </srcfiles>
      <srcfiles dir="${build}/Notification/src">
         <include name="**/*.*"/>
      </srcfiles>
      <srcfiles dir="${build}/NotifyComm/src">
         <include name="**/*.*"/>
      </srcfiles>
      <srcfiles dir="${build}/proxy/src">
         <include name="**/*.*"/>
      </srcfiles>
      <srcfiles dir="${build}/event/src">
         <include name="**/*.*"/>
      </srcfiles>
      <srcfiles dir="${build}/sps/src">
         <include name="**/*.*"/>
      </srcfiles>
    </uptodate>
  </target>

  <!-- IDL -->

  <target name="idl" depends="CosEvent,CosNotification,CosNotifyComm,proxy"/>

  <target name="context.idl" depends="prepare">
    <uptodate property="CosEvent.modified" targetfile="${idl}/CosEventComm.idl">
      <srcfiles dir="${build}/CosEvent/src">
         <include name="**/*.*"/>
      </srcfiles>
    </uptodate>
    <uptodate property="CosNotification.modified" 
        targetfile="${idl}/CosNotification.idl">
      <srcfiles dir="${build}/Notification/src">
         <include name="**/*.*"/>
      </srcfiles>
    </uptodate>
    <uptodate property="CosNotifyComm.modified" 
         targetfile="${idl}/CosNotifyComm.idl">
      <srcfiles dir="${build}/NotifyComm/src">
         <include name="**/*.*"/>
      </srcfiles>
    </uptodate>
    <uptodate property="proxy.modified" targetfile="${idl}/proxy.idl">
      <srcfiles dir="${build}/proxy/src">
         <include name="**/*.*"/>
      </srcfiles>
    </uptodate>
  </target>

  <target name="CosEvent" depends="context.idl" if="CosEvent.modified" >
    <echo message="IDL CosEvent.idl"/>
    <antcall target="idl2java" >
	<param name="destination" value="${build}/CosEvent/src"/>
      <param name="service" value="${idl}/CosEventComm.idl" />
    </antcall>
  </target>

  <target name="CosNotification" depends="context.idl" if="CosNotification.modified" >
    <echo message="IDL CosNotification.idl"/>
    <antcall target="idl2java" >
	<param name="destination" value="${build}/Notification/src"/>
      <param name="service" value="${idl}/CosNotification.idl" />
    </antcall>
  </target>

  <target name="CosNotifyComm" depends="context.idl" if="CosNotifyComm.modified" >
    <echo message="IDL CosNotifyComm.idl"/>
    <antcall target="idl2java" >
	<param name="destination" value="${build}/NotifyComm/src"/>
      <param name="service" value="${idl}/CosNotifyComm.idl" />
    </antcall>
  </target>

  <target name="proxy" depends="context.idl" if="proxy.modified" >
    <echo message="IDL proxy.idl"/>
    <antcall target="idl2java" >
	<param name="destination" value="${build}/proxy/src"/>
      <param name="service" value="${idl}/proxy.idl" />
    </antcall>
  </target>

  <!-- PSDL -->

  <target name="psdl" depends="event.psdl,sps.psdl"/>

  <target name="context.psdl" depends="prepare">
    <uptodate property="event.modified" targetfile="${psdl}/event.psdl">
      <srcfiles dir="${build}/event/src">
         <include name="**/*.*"/>
      </srcfiles>
    </uptodate>
    <uptodate property="sps.modified" targetfile="${psdl}/sps.psdl">
      <srcfiles dir="${build}/sps/src">
         <include name="**/*.*"/>
      </srcfiles>
    </uptodate>
  </target>

  <target name="event.psdl" depends="idl,context.psdl" if="event.modified">
    <java classname="${psdl.class}" fork="yes" failonerror="true">
      <classpath>
	  <path refid="project.classpath"/>
	</classpath>
	<arg line="-silence"/>
	<arg line="-${persistence}"/>
	<arg line="-I ${idl}"/>
	<arg line="-I ${psdl}"/>
	<arg line="-d ${build}/event/src"/>
	<arg line="${psdl}/event.psdl"/>
    </java>
  </target>

  <target name="sps.psdl" depends="idl,context.psdl" if="sps.modified">
    <java classname="${psdl.class}" fork="yes" failonerror="true">
      <classpath>
	  <path refid="project.classpath"/>
	</classpath>
	<arg line="-silence"/>
	<arg line="-${persistence}"/>
	<arg line="-I ${idl}"/>
	<arg line="-I ${psdl}"/>
	<arg line="-d ${build}/sps/src"/>
	<arg line="${psdl}/sps.psdl"/>
    </java>
  </target>

  <!-- COMPILE -->

  <target name="compile" depends="idl,psdl,context" unless="project.uptodate" >
      <echo message="Building project"/>
      <javac debug="off" destdir="${build}/lib" deprecation="true">
        <classpath>
	    <path refid="project.classpath" />
	  </classpath>
        <src path="${src}/java" />
        <src path="${build}/CosEvent/src" />
        <src path="${build}/Notification/src" />
        <src path="${build}/NotifyComm/src" />
        <src path="${build}/proxy/src" />
        <src path="${build}/event/src" />
        <src path="${build}/sps/src" />
      </javac>
      <copy todir="${build}/lib">
        <fileset dir="${src}/java">
          <include name="**/*.xinfo"/>
        </fileset>
      </copy>
      <jar jarfile="${dist}/${project.jar}" basedir="${build}/lib"
        manifest="${etc}/${ant.project.name}.mf"/>
  </target>

  <!-- INTERNAL UTILITY TARGETS -->

  <target name="support">
    <copy todir="${dist}">
       <fileset dir="${etc}">
         <include name="LICENSE.TXT"/>
         <include name="README.TXT"/>
       </fileset>
    </copy>
  </target>

  <target name="javadoc" depends="prepare" >
    <mkdir dir="${javadoc.root.path}/${ant.project.name}" />
    <copy todir="${javadoc.root.path}/${ant.project.name}">
       <fileset dir="${etc}">
         <include name="LICENSE.HTML"/>
         <include name="license.css"/>
       </fileset>
    </copy>
    <javadoc destdir="${javadoc.root.path}/${ant.project.name}" 
	doctitle="&lt;h1&gt;${project.title} ${VERSION}&lt;/h1&gt;" 
      noindex="false" author="false" 
      use="true"
      overview="${overview.html}"
	windowtitle="PKI Framework" 
      bottom="&lt;a href='{@docRoot}/LICENSE.HTML'/&gt;License, Disclaimer and due credits.&lt;/a&gt;"
      additionalparam="-breakiterator -J-Xmx128m"
      packagenames="net.*,org.*"  
      >
        <sourcepath path="${build}/CosEvent/src"/>
        <sourcepath path="${build}/Notification/src"/>
        <sourcepath path="${build}/NotifyComm/src"/>
        <sourcepath path="${build}/proxy/src"/>
        <sourcepath path="${build}/event/src"/>
        <sourcepath path="${build}/sps/src"/>
        <sourcepath path="${src}/java"/>
        <classpath>
	    <path refid="project.classpath" />
	  </classpath>
	  <link href="${jdk.href}" />
	  <link href="${avalon.href}" />
	  <link href="${orb.href}" />
	  <link href="${pss.href}" />
    </javadoc>
  </target>

  <target name="idl2java" >
    <echo message="IDL ${service}"/>
    <java failonerror="true" classname="org.openorb.compiler.IdlCompiler" fork="true">
          <classpath>
		<path refid="project.classpath"/>
	    </classpath>
	    <arg line="-silence"/>
	    <arg line="-d ${destination}"/>
	    <arg line="-I ${idl}"/>
	    <arg line="${service}" />
    </java>
  </target>

</project>
