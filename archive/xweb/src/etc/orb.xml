
<OpenORB >

  <!-- ********************************************************** -->
  <!--                            modules                         -->
  <!-- ********************************************************** -->

  <!-- 
  properties affecting the orb server 
  -->

  <module name="openorb.server">

    <description>
    Properties affecting the orb server side. This module has no
    initializer and does not have to be imported.
    </description>

    <property name="enable" value="true">
      <description>
      Enable the ORB server side. The server side may be disabled for
      a client only orb.
      </description>
    </property>

    <property name="alias" value="">
      <description>
      The server alias. This is used in persistent references.  All
      servers listening on the same port, on the same host, with the
      same server alias can accept requests to persistent targets
      created previous incarnations of the same server.<p/>
      The command line alias -ORBSrvName=name can be used rather than
      -ORBopenorb.server.name=name, regardless of if this module is
      imported.
      </description>
    </property>
    <propalias name="alias" alias="SrvName"/>

    <property name="maxQueueSize" value="0x7FFFFFFF" >
      <description>
      Maximum number of incomming requests to queue before replying
      with TRANSIENT exceptions.
      </description>
    </property>
    <property name="maxManagerHeldRequests" value="0x7FFFFFFF" >
      <description>
      Maximum number of requests that an adapter with a manager in the
      HOLDING state can hold before incomming requests are replied to
      with TRANSIENT exceptions
      </description>
    </property>

    <property name="minThreadPoolSize" value="2">
      <description>
       Minimum number of active threads in the request thread pool.
       The thread pool will never shrink beyond this size.
      </description>
    </property>
    <property name="maxThreadPoolSize" value="10">
      <description>
      Maximum number of pool threads. The thread pool will never grow
      beyond this size.
      </description>
    </property>

    <property name="reapCloseDelay" value="600000">
      <description>
      Reaper close time in ms. If a channel is unused for at least
      this time it will be closed to conserve resources.  The thread
      pool also has a chance to shrink each time this event occours.
      </description>
    </property>

    <property name="serverManagerClass" value="org.openorb.net.ServerManagerImpl">
      <description>
      Server manager class. There is no alternative at present.
      </description>
    </property>

  </module>

  <!-- ************************* -->
  <!--   openorb.client module   -->
  <!-- ************************* -->

  <module name="openorb.client">

    <description>
    Properties affecting the orb client side. This module has no
    initializer and does not have to be imported.
    </description>

    <property name="reapPauseDelay" value="120000">
      <description>
      Reaper pause time in ms. If a channel is unused for at least
      this time it will be closed to conserve resources.
      </description>
    </property>

    <property name="enable" value="true">
      <description>
      Enable the client side. Server only orbs are possible however
      certain POA functionality will be unavailable.
      </description>
    </property>

    <property name="clientManagerClass" value="org.openorb.net.ClientManagerImpl">
      <description>
      Client manager class. There is no alternative at present. 
      </description>
    </property>

  </module>

  <!-- ************************* -->
  <!--   openorb.pi module       -->
  <!-- ************************* -->

  <module name="openorb.pi">
    <description>
    Properties affecting the portable interceptors. There are
    currently no alternatives to the defaults for these
    properties. This module has no initializer and does not have to be
    imported.
    </description>
    <property name="ORBInitInfoClass" value="org.openorb.PI.OpenORBInitInfo" />
    <property name="ServerManagerClass" value="org.openorb.PI.SimpleServerManager" />
    <property name="ClientManagerClass" value="org.openorb.PI.SimpleClientManager" />
    <property name="IORManagerClass" value="org.openorb.PI.SimpleIORManager" />
  </module>

  <!-- *********************** -->
  <!--     openorb module      -->
  <!-- *********************** -->

  <module name="openorb">    
    <description>
    Misc other properties. This module has no initializer and does not
    have to be imported.
    </description>

    <property name="dynany.enable" value="true">
      <description>
      Enable the use of the DynamicAnyFactory
      </description>
    </property>

    <property name="kernel.ORBConnectorClass" value="org.openorb.CORBA.kernel.OpenORBConnector">
      <description>
      Define the orb connector class. There is currently no alternative.
      </description>
    </property>

    <property name="defaultInitRef" value="">
      <description>
      Set the orb default initial reference.<p/> 
      The command line alias -ORBDefaultInitRef=str can be used rather than
      -ORBopenorb.defaultInitRef=str, regardless of if this module is imported.
      </description>
    </property>
    <propalias name="defaultInitRef" alias="DefaultInitRef" />

    <property name="debug" value="0">
      <description>
      Set the orb debug level<p/> 
      The command line alias -ORBDebug=n can be used rather than
      -ORBopenorb.debug=n, regardless of if this module is imported.
      </description>
    </property>
    <propalias name="debug" alias="Debug" />

    <property name="useStaticThreadGroup" value="false">
      <description>
      Use static ThreadGroups for the orb threads. Can be useful to
      set to true when debugging the use of multiple orbs used in one
      app as it avoids large numbers of thread groups being created.
      </description>
    </property>
  </module>

  <!-- ************************** -->
  <!--      InitRef module        -->
  <!-- ************************** -->

  <module name="InitRef">
    <description>
    Module containing default initial references.  To add more initial
    services import and define properties with unique identifiers.
    Example import:<p/>

    <![CDATA[<import xlink:href="${openorb.home}config/default.xml#InitRef">]]> 
    <![CDATA[  <property name="NameService" value="corbaloc::1.2@localhost/NameService" /> ]]>
    <![CDATA[</import>]]><p/>

    Also see the defaultInitRef property, defined in the openorb
    module.
    </description>

    <propertyset/>
  </module>

  <!-- ********************** -->
  <!--    compiler module     -->
  <!-- ********************** -->

  <module name="compiler" >
    <propertyset prefix="idl" >
      <description>
      The compiler module defines a single property set which allows
      additional include directories for the openorb compiler.  Each
      extra idl include directory property starts with idl and must
      have a unique extension. Example of import statement, adding an
      include: <p/>

      <![CDATA[<import xlink:href="${openorb.home}config/default.xml#compiler">]]> 
      <![CDATA[  <property name="idl.xxx" value="URL" />]]> 
      <![CDATA[</import>]]>
      <p/>
      
      The include dir "${openorb.home}idl" is always present in the
      compiler include path, it always appears last in the include
      list.
      </description>
    </propertyset>
  </module>

  <!-- *********************** -->
  <!--    BOA module 	       -->
  <!-- *********************** -->

  <module name="BOA" initializer="org.openorb.adapter.boa.BOAInitializer" >
    <description>
    The BOA module. Import this module to use the BOA. 
    </description>
  </module>


  <!-- ************************ -->
  <!--   POA module             -->
  <!-- ************************ -->

  <module name="POA" initializer="org.openorb.adapter.poa.POAInitializer">
    <description>
    The POA module. Import this module to use the POA. This is
    included in the default profile.
    </description>
  </module>


  <!-- ************************* -->
  <!--   Forward Adapter module  -->
  <!-- ************************* -->

  <module name="ForwardAdapter" initializer="org.openorb.adapter.fwd.ForwardInitializer" >
    <description>
    The forwarding adapter module. When loaded it is possible to
    resolve corbaloc style addresses if they are registered.
    </description>
  </module>

  <!-- *********************************** -->
  <!--   Initial References service module -->
  <!-- *********************************** -->

  <profile name="InitialReferencesService">
    <description>
    This profile loads the ForwardAdapter module, and sets the port
    number in iiop to 683, the default port.
    </description>

    <import module="ForwardAdapter" />
    <import module="iiop" >
      <property name="port" value="683" />
    </import>
  </profile>

  <!-- **************************** -->
  <!--      BasicRefs profile       -->
  <!-- **************************** -->

  <profile name="BasicRefs">
    <description>
    Basic initial references.
    </description>

    <import module="openorb" >
      <!--
      <property name="defaultInitRef" value="corbaname:rir:#InitialReferences" />
      -->
      <property name="defaultInitRef" value="" />
    </import>
  </profile>

  <!-- *********************** -->
  <!--    iiop module          -->
  <!-- *********************** -->

  <module name="iiop" initializer="org.openorb.iiop.IIOPProtocolInitializer">
    <description>
    The IIOP protocol is the basic interoperability protocol between
    all orbs. It should be included in all profiles.
    </description>

    <!-- Properties controlling what endpoints are published in IORs. -->
    <property name="hostname" value="">
      <description>
      Hostname to publish in IORs. If empty string or unspecified the
      published hostname will be determined by the publishIP setting.
      </description>
    </property>
    <property name="publishIP" value="auto">
      <description>
      Publish IP address in IORs instead of hostname. The default
      setting of 'auto' will publish the IP address if the hostname is
      not a fqdn (does not contain a . ).  If true the IP address is
      always used.  For all other values the hostname is used.  If the
      hostname property is set this overrides this setting.
      </description>
    </property>
    <propertyset prefix="alternateAddr">
      <description>
      This property set defines alternate IIOP endpoints which are 
      published in IORs. These are generaly servers on different targets.
      Each defined alternative should have a unique prefix.
      </description>
    </propertyset>

    <!-- properties controlling the incomming server side. -->
    <property name="listenAddress" value="0.0.0.0">
      <description>
      Address to listen on on multi-homed host. Defaults to 0.0.0.0,
      all local addresses.
      </description>
    </property>
    <property name="port" value="0">
      <description>
      Port for the iiop transport to listen on. Defaults to 0, any
      available port.<p/>
      Command line alias Port is available.
      </description>
    </property>
    <propalias name="port" alias="Port" />

    <!-- properties controlling bidirectional iiop -->
    <property name="allowBidir" value="true">
      <description>
      Allow bidirectional IIOP. For BiDirectional IIOP to be available
      at all this property must be set to true. It is set to true by
      default, since activating BiDirectional IIOP requires setting
      server and client side policies.
      </description>
    </property>
    <property name="biDirOnlyServer" value="false">
      <description>
      When both allowBiDir and biDirOnlyServer are true, the server side
      orb will not listen for incomming requests. All incomming requests
      must be recieved over a bidirectional channel.
      </description>
    </property>

    <!-- Properties not usualy modified by users -->
    <property name="CDRInputStreamClass" value="org.openorb.iiop.CDRInputStream">
      <description>
      CDRInputStream class. This is modified by the RMIoverIIOP
      module.
      </description>
    </property>
    <property name="CDROutputStreamClass" value="org.openorb.iiop.CDROutputStream">
      <description>
      CDRInputStream class. This is modified by the RMIoverIIOP
      module.
      </description>
    </property>
    <property name="IIOPTransportServerInitializerClass" value="org.openorb.iiop.IIOPTransportServerInitializer">
      <description>
      Server transport. This is modified by security services.
      </description>
    </property>
    <property name="TransportClientInitializerClass" value="org.openorb.iiop.IIOPTransportClientInitializer">
      <description>
      Client transport. This is modified by security services.
      </description>
    </property>
  </module>    

  <module name="agent" initializer="net.osm.realm.ClientInitializer">
  </module>

  <profile name="default" >

    <description>
    The default profile - includes the POA, iiop and initial references.
    </description>

    <import module="POA" />
    <import module="iiop" />    
    <import profile="BasicRefs" />
    
    <import module="InitRef">
      <property name="NameService" value="corbaloc::1.2@localhost:2506/POA.INS.NameService" />
    </import>
    
  </profile>


  <!-- ********************************************************** -->
  <!--                       Extensions                           -->
  <!-- ********************************************************** -->

  <module name="pss" initializer="org.openorb.pss.Initializer" >
    <property name="File.DataStore.Directory" value="db" />
    <property name="File.DataStore.Name" value="pss" />
    <property name="File.FlushTime" value="30" />
    <property name="File.Transaction.IsolationLevel" value="1" />
    <property name="Database.Transaction.IsolationLevel" value="4" />
  </module>
 
  <module name="transaction" initializer="org.openorb.ots.Initializer" >
    <import module="InitRef">    
      <property name="TransactionService" value="corbaname:rir:#COS/TransactionService/TransactionFactory" />
    </import>
    <!-- Properties for the Instant DB database profile -->
    <property name="InstantDB.XA.VirtualXA" value="true" root="true" />
    <property name="InstantDB.JDBC.driver_loading" value="true" root="true" />
    <property name="InstantDB.JDBC.isolation_level" value="4" root="true" />
    <property name="InstantDB.JDBC.driver" value="org.enhydra.instantdb.jdbc.idbDriver" root="true"/>
    <property name="InstantDB.JDBC.url" value="jdbc:idb:ots.prp" root="true" />
  </module>

  <module name="InteroperableNamingService">
    <import module="pss">
      <property name="File.DataStore.Directory" value="db" />
      <property name="File.DataStore.Name" value="ins" />
      <property name="File.FlushTime" value="30" />
      <property name="File.Transaction.IsolationLevel" value="1" />
    </import>
  </module>

  <!-- ********************************************************** -->
  <!--                      Profiles                              -->
  <!-- ********************************************************** -->

  <profile name="time" extends="default"/>

  <profile name="audit" extends="default">
    <import module="pss" />
    <import module="agent" />
  </profile>

  <profile name="gateway" extends="default">
     <import module="pss" />
  </profile>

  <profile name="ots" extends="default">
     <import module="transaction" />
  </profile>

  <profile name="ins" extends="default">
    <import module="pss">
      <property name="File.DataStore.Directory" value="db" />
      <property name="File.DataStore.Name" value="ins" />
      <property name="File.FlushTime" value="30" />
      <property name="File.Transaction.IsolationLevel" value="1" />
    </import>
  </profile>
  
  <profile name="realm" extends="default">
    <import module="pss" />
  </profile>

  <profile name="web" extends="default"/>


</OpenORB>

